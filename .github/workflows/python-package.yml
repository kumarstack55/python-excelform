# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
        source $HOME/.poetry/env
        poetry --version
    - name: Install dependencies
      run: |
        source $HOME/.poetry/env
        poetry install
    - name: Lint with flake8
      run: |
        source $HOME/.poetry/env
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint wiht mypy
      run: |
        source $HOME/.poetry/env
        poetry run mypy --strict-optional --disallow-untyped-defs --disallow-untyped-calls .
    - name: Test with unittest
      run: |
        source $HOME/.poetry/env
        poetry run coverage run -m unittest discover tests
    - name: Report coverage
      run: |
        source $HOME/.poetry/env
        poetry run coverage report
    - name: Upload to Codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        source $HOME/.poetry/env
        poetry run bash <(curl -s https://codecov.io/bash)
